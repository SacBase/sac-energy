class Rapl;

external classtype;

export all except { + };

objdef Rapl TheRaplObject = createRaplObject();

external TheRaplObject createRaplObject();
    #pragma effect World::TheWorld
    #pragma linkname "SAC_rapl_create"
    #pragma linkobj "src/rapl.o"
    #pragma linksign [1]

external void touch(TheRaplObject& obj);
    #pragma linkname "SAC_rapl_touch"
    #pragma linkobj "src/rapl.o"

external longlong[.] raplStart();
    #pragma effect TheRaplObject
    #pragma linkobj "src/rapl.o"
    #pragma linksign [0]
    #pragma sacarg [0]

external longlong[.] raplStop(longlong[.] start);
    #pragma effect TheRaplObject
    #pragma linkobj "src/rapl.o"
    #pragma linksign [0,1]
    #pragma sacarg [0,1]

external int numThreads();
    #pragma effect TheRaplObject
    #pragma linkobj "src/rapl.o"

external longlong constraint_0_power_limit_uw();
    #pragma effect TheRaplObject
    #pragma linkobj "src/rapl.o"

inline longlong +(longlong a, longlong b) { return _add_SxS_(a, b); }

double tod(longlong[n] energy_uj)
{
    total = with {
        ([0] <= iv < [n]): _sel_VxA_(iv, energy_uj);
    }: fold(+, 0ll);
    return _div_SxS_(_tod_S_(total), 1e9d);
}

void touch()
{
    touch(TheRaplObject);
}
